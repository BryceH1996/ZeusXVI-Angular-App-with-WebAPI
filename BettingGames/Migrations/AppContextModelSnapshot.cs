// <auto-generated />
using BettingGames;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BettingGames.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BettingGames.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryName")
                        .IsRequired();

                    b.Property<int>("SportID");

                    b.Property<string>("SportName");

                    b.Property<bool>("isHidden");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("BettingGames.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryID");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("Date");

                    b.Property<string>("EventName")
                        .IsRequired();

                    b.Property<int>("SportID");

                    b.Property<string>("SportName");

                    b.Property<int>("TournamentID");

                    b.Property<string>("TournamentName");

                    b.Property<bool>("isHidden");

                    b.HasKey("ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("BettingGames.Model.Bet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventID");

                    b.Property<string>("EventName");

                    b.Property<int>("MarketID");

                    b.Property<int>("UserID");

                    b.Property<decimal>("amount");

                    b.HasKey("id");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("BettingGames.Model.BetType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BetName");

                    b.Property<int>("EventID");

                    b.Property<string>("EventName");

                    b.HasKey("id");

                    b.ToTable("BetTypes");
                });

            modelBuilder.Entity("BettingGames.Model.Market", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BetID");

                    b.Property<string>("BetName");

                    b.Property<decimal>("Draw");

                    b.Property<decimal>("OddOne");

                    b.Property<decimal>("OddTwo");

                    b.HasKey("id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("BettingGames.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Balance");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BettingGames.Sport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SportName")
                        .IsRequired();

                    b.Property<bool>("isHidden");

                    b.HasKey("ID");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("BettingGames.Tournament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CountryID");

                    b.Property<string>("CountryName");

                    b.Property<int>("SportID");

                    b.Property<string>("SportName");

                    b.Property<string>("TournamentName")
                        .IsRequired();

                    b.Property<bool>("isHidden");

                    b.HasKey("ID");

                    b.ToTable("Tournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
